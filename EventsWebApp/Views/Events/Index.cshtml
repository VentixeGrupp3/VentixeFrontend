@model IEnumerable<EventsWebApp.Models.ViewModels.EventCardViewModel>
@using EventsWebApp.Services.Interfaces
@{
    ViewData["Title"] = "Events";

    // Get user role service and check permissions
    var userRoleService = ViewContext.HttpContext.RequestServices.GetService<IUserRoleService>();
    var isAdmin = userRoleService != null && await userRoleService.IsAdminAsync();
    var canCreateEvents = userRoleService != null && await userRoleService.CanCreateEventsAsync();
    var canEditEvents = userRoleService != null && await userRoleService.CanEditEventsAsync();
    var canDeleteEvents = userRoleService != null && await userRoleService.CanDeleteEventsAsync();
}

<div class="page-header">
    <h1 class="page-title">Events</h1>
    <div class="action-buttons">
        @if (canCreateEvents)
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> New Event
            </a>
        }
        else
        {
            <span class="text-muted">
                <i class="fas fa-info-circle"></i> Browse events and make reservations
            </span>
        }
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <i class="fas fa-check-circle"></i>
        @TempData["Success"]
        <button type="button" class="close" onclick="this.parentElement.style.display='none';">
            <span>&times;</span>
        </button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <i class="fas fa-exclamation-circle"></i>
        @TempData["Error"]
        <button type="button" class="close" onclick="this.parentElement.style.display='none';">
            <span>&times;</span>
        </button>
    </div>
}

<!-- Events Statistics (visible to all users) -->
<div class="stats-container">
    <div class="stat-card">
        <div class="stat-icon">
            <i class="fas fa-calendar-check"></i>
        </div>
        <div class="stat-info">
            <h3>@Model.Count()</h3>
            <p>Total Events</p>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-icon">
            <i class="fas fa-clock"></i>
        </div>
        <div class="stat-info">
            <h3>@Model.Count(e => e.IsUpcoming)</h3>
            <p>Upcoming Events</p>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-icon">
            <i class="fas fa-ticket-alt"></i>
        </div>
        <div class="stat-info">
            <h3>@Model.Sum(e => e.TicketsSold)</h3>
            <p>Tickets Sold</p>
        </div>
    </div>
</div>

<!-- Events List -->
<div class="events-grid">
    @if (Model != null && Model.Any())
    {
        @foreach (var eventItem in Model)
        {
            <div class="event-card">
                <div class="event-header">
                    <h3 class="event-title">@eventItem.EventName</h3>
                    <span class="event-category">@eventItem.EventCategory</span>
                </div>

                <div class="event-details">
                    @if (!string.IsNullOrEmpty(eventItem.Description))
                    {
                        <p class="event-description">@eventItem.Description</p>
                    }

                    <div class="event-meta">
                        <div class="meta-item">
                            <i class="fas fa-calendar"></i>
                            <span>@eventItem.EventDate.ToString("MMM dd, yyyy")</span>
                        </div>

                        @if (eventItem.EventTime.TimeOfDay != TimeSpan.Zero)
                        {
                            <div class="meta-item">
                                <i class="fas fa-clock"></i>
                                <span>@eventItem.EventTime.ToString("HH:mm")</span>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(eventItem.Location))
                        {
                            <div class="meta-item">
                                <i class="fas fa-map-marker-alt"></i>
                                <span>@eventItem.Location</span>
                            </div>
                        }
                    </div>

                    <div class="event-stats">
                        <div class="stat-item">
                            <strong>@eventItem.Capacity</strong>
                            <span>Capacity</span>
                        </div>

                        <div class="stat-item">
                            <strong>@eventItem.TicketsSold</strong>
                            <span>Tickets Sold</span>
                        </div>

                        <div class="stat-item">
                            <strong>@eventItem.RelativeTimeDescription</strong>
                            <span>Status</span>
                        </div>
                    </div>
                </div>

                <div class="event-actions">
                    <!-- View button - available to all users -->
                    <a asp-action="Details" asp-route-id="@eventItem.EventId" class="btn btn-outline">
                        <i class="fas fa-eye"></i> View Details
                    </a>

                    <!-- Admin-only buttons -->
                    @if (canEditEvents)
                    {
                        <a asp-action="Edit" asp-route-id="@eventItem.EventId" class="btn btn-secondary">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                    }

                    @if (canDeleteEvents)
                    {
                        <form asp-action="Delete" asp-route-id="@eventItem.EventId" method="post" style="display: inline;">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger"
                                    onclick="return confirm('Are you sure you want to delete this event? This action cannot be undone.')">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </form>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="empty-state">
            <i class="fas fa-calendar-times"></i>
            <h3>No events found</h3>
            <p>
                @if (canCreateEvents)
                {
                    <text>Get started by creating your first event.</text>
                }
                else
                {
                    <text>No events are available at the moment. Check back later!</text>
                }
            </p>

            @if (canCreateEvents)
            {
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create Event
                </a>
            }
        </div>
    }
</div>