@using EventsWebApp.Models.ViewModels
@using EventsWebApp.Services.Interfaces
@model EventFormViewModel

@inject IUserRoleService userRoleService

@{
    ViewData["Title"] = "Event Details";
    var isAdmin = await userRoleService.IsAdminAsync();
    var canEditEvents = await userRoleService.CanEditEventsAsync();
    var canDeleteEvents = await userRoleService.CanDeleteEventsAsync();
}

<h2>@(Model?.EventName ?? "Event Details")</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <i class="fas fa-check-circle"></i>
        @TempData["Success"]
        <button type="button" class="close" onclick="this.parentElement.style.display='none';">
            <span>&times;</span>
        </button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <i class="fas fa-exclamation-circle"></i>
        @TempData["Error"]
        <button type="button" class="close" onclick="this.parentElement.style.display='none';">
            <span>&times;</span>
        </button>
    </div>
}

<!-- Event Details Card -->
<div class="card">
    <div class="card-body">
        @if (!string.IsNullOrEmpty(Model?.EventCategory))
        {
            <p><strong>Category:</strong> @Model.EventCategory</p>
        }
        @if (!string.IsNullOrEmpty(Model?.Description))
        {
            <p><strong>Description:</strong> @Model.Description</p>
        }
        @if (!string.IsNullOrEmpty(Model?.EventDate))
        {
            <p><strong>Date:</strong> @Model.EventDate</p>
        }
        @if (!string.IsNullOrEmpty(Model?.EventTime))
        {
            <p><strong>Time:</strong> @Model.EventTime</p>
        }
        @if (!string.IsNullOrEmpty(Model?.Location))
        {
            <p><strong>Location:</strong> @Model.Location</p>
        }
        @if (!string.IsNullOrEmpty(Model?.VenueName))
        {
            <p><strong>Venue:</strong> @Model.VenueName</p>
        }

        <p><strong>Capacity:</strong> @(Model?.Capacity ?? 0)</p>

        @if (Model?.TicketsSold > 0)
        {
            <p><strong>Tickets Sold:</strong> @Model.TicketsSold (@Model.TicketsSoldPercentage% of capacity)</p>
        }
    </div>
</div>

<!-- Action Buttons -->
<div class="mt-3 d-flex flex-wrap gap-2">
    <!-- Reserve Tickets -->
    <a href="#reserveForm" class="btn btn-primary btn-lg" onclick="document.getElementById('reserveForm').style.display='block';">
        <i class="fas fa-ticket-alt"></i> Reserve Tickets
    </a>

    @if (canEditEvents)
    {
        <a asp-action="Edit" asp-route-id="@Model?.EventId" class="btn btn-secondary">
            <i class="fas fa-edit"></i> Edit Event
        </a>
    }

    @if (canDeleteEvents)
    {
        <form asp-action="Delete" asp-route-id="@Model?.EventId" method="post" style="display: inline;"
              onsubmit="return confirm('Are you sure you want to delete this event? This action cannot be undone.');">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger">
                <i class="fas fa-trash"></i> Delete Event
            </button>
        </form>
    }

    <a asp-action="Index" class="btn btn-outline">
        <i class="fas fa-arrow-left"></i> Back to Events
    </a>
</div>

@if (!isAdmin)
{
    <div class="alert alert-info mt-4">
        <i class="fas fa-info-circle"></i>
        <strong>Viewing as regular user:</strong> You can view event details and make reservations.
        Contact an administrator to modify event details.
    </div>
}

<!-- Reservation Form -->
<div id="reserveForm" style="display: none; margin-top: 2rem;">
    <div class="card">
        <div class="card-header">
            <h3>Reserve Tickets - @Model?.EventName</h3>
            <div>
                <i class="fas fa-calendar"></i> @Model?.EventDate
                @if (!string.IsNullOrEmpty(Model?.EventTime))
                {
                    <span> at @Model.EventTime</span>
                }
            </div>
            <div>
                <i class="fas fa-map-marker-alt"></i> @Model?.Location
                @if (!string.IsNullOrEmpty(Model?.VenueName))
                {
                    <span> - @Model.VenueName</span>
                }
            </div>
        </div>

        <div class="card-body">
            <form asp-controller="Booking" asp-action="Reserve" method="post" class="event-form">
                @Html.AntiForgeryToken()

                <input type="hidden" name="EventId" value="@Model?.EventId" />
                <input type="hidden" name="EventName" value="@Model?.EventName" />

                <div class="form-section">
                    <h4>Customer Information</h4>
                    <div class="form-group">
                        <label>Full Name *</label>
                        <input type="text" name="CustomerName" class="form-control" required />
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label>Email *</label>
                            <input type="email" name="CustomerEmail" class="form-control" required />
                        </div>
                        <div class="form-group col-md-6">
                            <label>Phone *</label>
                            <input type="tel" name="CustomerPhone" class="form-control" required />
                        </div>
                    </div>
                </div>

                <div class="form-section">
                    <h4>Ticket Selection</h4>
                    <div class="form-row">
                        <div class="form-group col-md-8">
                            <label>Ticket Type *</label>
                            <select name="TicketType" class="form-control" required onchange="updateTicketPrice(this)">
                                <option value="">-- Select Ticket Type --</option>
                                @if (Model?.TicketCategories != null && Model.TicketCategories.Any())
                                {
                                    foreach (var ticket in Model.TicketCategories)
                                    {
                                        <option value="@ticket.TicketCategory"
                                                data-price="@ticket.Price"
                                                data-available="@ticket.AvailableQuantity"
                                                data-description="@ticket.Description">
                                            @ticket.TicketCategory - @ticket.FormattedPrice
                                            @if (ticket.AvailableQuantity <= 0)
                                            {
                                                <text> (Sold Out)</text>
                                            }
                                            else if (ticket.AvailableQuantity <= 10)
                                            {
                                                <text> (Only @ticket.AvailableQuantity left!)</text>
                                            }
                                        </option>
                                    }
                                }
                                else
                                {
                                    <option value="Standard" data-price="29.99" data-description="General admission">Standard - $29.99</option>
                                    <option value="VIP" data-price="79.99" data-description="Premium experience">VIP - $79.99</option>
                                    <option value="Premium" data-price="149.99" data-description="Exclusive access">Premium - $149.99</option>
                                }
                            </select>
                            <input type="hidden" name="TicketPrice" id="ticketPrice" />
                        </div>

                        <div class="form-group col-md-4">
                            <label>Quantity *</label>
                            <input type="number" name="Quantity" id="ticketQuantity" value="1" min="1" max="10" class="form-control" required onchange="updateTotal()" />
                        </div>
                    </div>

                    <div id="ticketDescription" style="display: none;" class="mt-2 p-2 bg-light rounded">
                        <p id="descriptionText" class="mb-0 text-muted small"></p>
                    </div>

                    <div id="totalDisplay" style="display: none;" class="mt-3 p-3 text-center bg-info text-white rounded">
                        <strong>Total: $<span id="totalAmount">0.00</span></strong>
                    </div>
                </div>

                <div class="form-actions mt-4">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-ticket-alt"></i> Reserve Tickets
                    </button>
                    <button type="button" class="btn btn-secondary btn-lg" onclick="document.getElementById('reserveForm').style.display='none';">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/event-details.js"></script>
}
